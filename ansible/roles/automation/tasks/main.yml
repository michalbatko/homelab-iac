- name: Install required packages
  apt:
    name:
      - sudo
      - unattended-upgrades
      - apt-listchanges
      - wget
      - gpg
      - gnupg
      - software-properties-common
      - ansible
      - nodejs
      - npm
      - certbot
      - python3-certbot-dns-cloudflare
      - python3-requests
      - python3-urllib3
    state: present
    update_cache: yes

- name: Add HashiCorp GPG key
  apt_key:
    url: https://apt.releases.hashicorp.com/gpg
    keyring: /usr/share/keyrings/hashicorp-archive-keyring.gpg
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add HashiCorp repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com bookworm main"
    filename: hashicorp
    state: present
    update_cache: yes

- name: Install Terraform
  apt:
    name: terraform
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy 50unattended-upgrades file
  template:
    src: ../../templates/50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: '0644'
  notify: Restart unattended-upgrades

- name: Create actions-runner user account
  user:
    name: actions-runner
    home: /opt/actions-runner
    create_home: yes
    shell: /bin/bash
    system: yes
    state: present

- name: Create Cloudflare credentials file for Certbot
  copy:
    dest: /etc/letsencrypt/cloudflare.ini
    content: dns_cloudflare_api_token = {{ cloudflare_api_token }}
    owner: root
    group: root
    mode: '0600'
  no_log: true

- name: Create Proxmox API token file for certificate deployment
  copy:
    dest: /etc/letsencrypt/proxmox-api-token.ini
    content: "{{ proxmox_api_token }}"
    owner: root
    group: root
    mode: '0600'
  no_log: true

- name: Create logs directory for certificate deployment
  file:
    path: /var/log/letsencrypt
    state: directory
    mode: '0755'

- name: Ensure letsencrypt directory exists
  file:
    path: /etc/letsencrypt
    state: directory
    mode: '0755'

- name: Create scripts directory for certificate deployment
  file:
    path: /etc/letsencrypt/scripts
    state: directory
    mode: '0755'

- name: Copy certificate deployment playbook
  copy:
    src: "{{ playbook_dir }}/deploy-proxmox-certificate.yml"
    dest: /etc/letsencrypt/scripts/deploy-proxmox-certificate.yml
    mode: '0644'

- name: Check if certificate already exists
  stat:
    path: /etc/letsencrypt/live/infra.home.batko.me/fullchain.pem
  register: cert_file

- name: Generate initial certificate for infra.home.batko.me
  command: >
    certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini 
    --non-interactive --agree-tos -m admin@batko.me 
    -d infra.home.batko.me
  when: not cert_file.stat.exists
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create certbot deploy hook directory
  file:
    path: /etc/letsencrypt/renewal-hooks/deploy
    state: directory
    mode: '0755'

- name: Add certificate deployment script
  template:
    src: deploy-cert-hook.sh.j2
    dest: /etc/letsencrypt/renewal-hooks/deploy/deploy-infra-cert.sh
    mode: '0755'

- name: Ensure certbot timer is enabled
  systemd:
    name: certbot.timer
    enabled: yes
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
