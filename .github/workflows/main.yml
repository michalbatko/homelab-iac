name: CICD

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  check-formatting:
    name: Check Code Formatting
    runs-on: self-hosted
    if: github.event.action != 'closed'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2

    - name: Check Terraform Formatting
      id: fmt_check
      run: terraform fmt -check -diff -recursive ./terraform
      working-directory: ./terraform
      continue-on-error: true

    - name: Show Formatting Diff
      if: steps.fmt_check.outcome == 'failure'
      run: |
        echo "Terraform formatting check failed. Please review the following diff:"
        git diff --exit-code
        exit 1

  validate-terraform:
    name: Validate Changes
    runs-on: self-hosted
    if: github.event.action != 'closed'
    needs: check-formatting

    strategy:
      fail-fast: false
      matrix:
        directory:
          - proxmox
          - cloudflare
          # Add more directories for additional Terraform providers as needed

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2

    - name: Initialize Terraform
      run: terraform init -backend=false
      working-directory: terraform/${{ matrix.directory }}

    - name: Validate Terraform Configuration
      run: terraform validate
      working-directory: terraform/${{ matrix.directory }}

    - name: Generate Terraform Plan
      id: plan_output
      # -no-color is used to ensure the plan output is clean for artifact storage and parsing.
      run: terraform plan -no-color -out=terraform.tfplan
      working-directory: terraform/${{ matrix.directory }}

    - name: Upload Terraform Plan Artifact
      if: success() && steps.plan_output.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: tfplan-${{ matrix.directory }}-${{ github.event.pull_request.head.sha }}
        path: terraform/${{ matrix.directory }}/terraform.tfplan
        retention-days: 90
        # Retention days can be adjusted based on needs, default is 90 days.

  deploy-terraform:
    name: Deploy Changes
    runs-on: self-hosted
    if: github.event.pull_request.merged == true

    strategy:
      matrix:
        directory:
          - proxmox
          - cloudflare
          # Add more directories for additional Terraform providers as needed

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2

    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: tfplan-${{ matrix.directory }}-${{ github.event.pull_request.head.sha }}
        path: terraform/${{ matrix.directory }}

    - name: Initialize Terraform
      run: terraform init -backend=false
      working-directory: terraform/${{ matrix.directory }}

    - name: Apply Terraform Plan
      run: terraform apply -auto-approve ./terraform.tfplan
      working-directory: terraform/${{ matrix.directory }}
